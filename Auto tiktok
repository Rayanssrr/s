import random, os, socket, requests, threading, ctypes
from time import sleep
from termcolor import colored
from requests_futures.sessions import FuturesSession
from concurrent.futures import as_completed
from discord_webhook import DiscordWebhook
from discord_webhook import DiscordEmbed
from tqdm import tqdm



os.system('mode con: cols=85 lines=33')
dir_path = os.path.dirname(os.path.realpath(__file__))
print_lock = threading.Lock()
WHITE = '\x1b[1;37;40m'
YELLOW = '\x1b[1;33;40m'
RED = '\x1b[1;31;40m'
s1 = '\x1b[31m[]\x1b[40m'
plus = '\x1b[32m+\x1b[39m'
mains = '\x1b[36m-\x1b[31m'
SL = '\x1b[35m/\x1b[39m'
INPUT = f"\x1b[39m[{plus}]\x1b[39m"
INPUT1 = f"\x1b[39m[{SL}]\x1b[39m"
INPUT2 = f"\x1b[31m[{mains}]\x1b[39m"
blue = '\x1b[36m\x1b[40m'
red = '\x1b[31m\x1b[40m'
GREEN = '\x1b[32m\x1b[40m'
purble = '\x1b[35m\x1b[39m'
SUCCESS = '\x1b[31m Successfulyy moved \x1b[31m'
Run = '\x1b[36m Started Running...\x1b[31m'
under = '\x1b[35m_\x1b[39m'
skip = '\x1b[31m (defult Thread = 300) \x1b[31m'
clearConsle = lambda: os.system('cls')
dude = """

    * AutoClaimer tiktok * 

        Targrt Mode + list mode 
        ./ Made By Rayan@m1c1

"""
banner = """

              ___       _                  _____            _         
             | __|__ _ | | __  ___  _ _   |_   _|_  _  _ _ | |__  ___ 
             | _|/ _` || |/ _|/ _ \| ' \    | | | || || '_|| '_ \/ _ \ 
             |_| \__,_||_|\__|\___/|_||_|   |_|  \_,_||_|  |_.__/\___/

"""

lool = dude + banner

print(f"{blue}  {lool}")


images = [
    "https://media.giphy.com/media/I6wUi5eTdUCWI/giphy.gif",
    "https://media.giphy.com/media/3fNmJ20ErpkjK/giphy.gif",
    "https://media.giphy.com/media/GLgPVZ5PLMOPe/giphy.gif",
    "https://media.giphy.com/media/AkRFIhfAKHsyc/giphy.gif",
    "https://media.giphy.com/media/A5KGHdmmxHdwk/giphy.gif",
    "https://media.giphy.com/media/QCJlIDkOJDEIctfdzz/giphy.gif",
    "https://media.giphy.com/media/if9niVFg4IwAE/giphy.gif",
    "https://media.giphy.com/media/QLCWubleeNppS/giphy.gif",]

im = random.choice(images)


class Claimer_tiktok():
    def __init__(self):
        self.attempts = 0
        self.Ratelimt = 0
        self.Requestpersec = 0
        self.day = 0
        self.usernames = open("list.txt","r").read().splitlines()
        self.sessions = open("sessions.txt","r").read().splitlines()
        self.pro = open("proxies.txt","r").read().splitlines()
        print(f"{INPUT} {blue} SESSIONS : {len(self.sessions)}")
        print(f"{INPUT} {red} USERNAMES : {len(self.usernames)}")
        self.threads = int(input(f"{INPUT1} Threads {red}(Max = 500) : "))
        self.Silnt = int(input(f"{INPUT1} SILNT {red}(MAX = 1500 ) : "))
        self.skip = int(input(f"{INPUT1} Skip {red}(MAX = 30 ) : "))
        self.future_session = FuturesSession(max_workers=self.Silnt)
        self.controll = threading.Event()
        self.Locks = threading.Lock()
        self.install()
        threading.Thread(target=self.RequestperSec).start()
        self.thredas = []
        for i in range(int(self.threads)):
            t = threading.Thread(target=self.attack)
            t.setDaemon = True
            t.start()
            self.controll.set()
            self.thredas.append(t)
        for t in self.thredas:
            t.join()

    def RequestperSec(self):
        while 1:
            self.per = self.attempts
            sleep(1)
            self.Requestpersec = self.attempts - self.per


    def proxies(self):
        self.proxy = random.choice(self.pro)
        self.erp = {"http": f"{self.proxy}", "https": f"{self.proxy}"}
        return self.erp
    def headers(self):
        he = {}
        he["Host"] = "www.tiktok.com"
        he["Accept-Encoding"] = "gzip, deflate"
    def Done(self,session,user):
        save = open(f"{user}.txt","a").write(f"user : {user} \n session : {session}\n Good Luck :) " )
        webhook = DiscordWebhook(url="https://discord.com/api/webhooks/866694957527203840/tnLEewuXShYRIOhLNbvp0JVUdYytgwyvlH2mQJcW2Fn1kPJunLUTe2kUSH_uf0WIFXPB")
        embed = DiscordEmbed(title=f'Claimed @{user}\nBy Rayan | Attempts  {self.attempts}\nR/S  {self.Requestpersec} \nCoded By Rayan',color=000000)
        embed.set_thumbnail(url=im)
        embed.set_footer(text="Date claim")
        embed.set_timestamp()
        webhook.add_embed(embed)
        response = webhook.execute()
        print(f"\n{INPUT} Claimed @{user} \x1b[35mAfter {self.attempts} Attempts \x1b[39m")
        ctypes.windll.user32.MessageBoxW(0, f"Hhh Im win : @{user}  ", f"Auto", 0x1000)
    def install(self):
        print(f"{INPUT1}{red} Please wait to download all settings... ")
        for _ in tqdm(range(200), desc=f"{INPUT1}", ascii=False, ncols=65):
           sleep(0.01)
        print(f"{INPUT}{GREEN} All settings have been downloaded , Click Enter to continue ")
        input('“If I deliver to you the impossible, then I might have earned your trust.”\n - Lelouch Vi Britannia')

    def attack(self):
        try:
            future = []
            for i in range(self.skip):
                while 1:
                    user = random.choice(self.usernames)
                    session = random.choice(self.sessions)
                    futures = self.future_session.post(f"https://www.tiktok.com/api/commit/user/?tt_csrf_token=UxruDQNT5r0Dmf_nPoeMzRTe&secret=1&unique_id={user}", headers=self.headers(),cookies={"tt_csrf_token":"UxruDQNT5r0Dmf_nPoeMzRTe","sessionid":f"{session}"},proxies=self.proxies())
                    futures.i = i
                    future.append(futures)
                    for futures in as_completed(future):
                        with futures.result() as resp:
                            print(resp.text)
                            if ('"status_code": 0') in resp.text:
                                with self.Locks:
                                    self.Done(session,user)
                            elif ("You can only change your username once every 30 days") in resp.text:
                                self.day +=1
                            elif ("taken") in resp.text:
                                self.attempts +=1
                                with self.Locks:
                                    print(f"\r{blue}{INPUT1} Attempts : {self.attempts} | Ratelimt : {self.Ratelimt} | R/S : {self.Requestpersec} | 30day : {self.day}",end="")
                            elif ("2-24") in resp.text:
                                self.Ratelimt +=1
                            elif ('"status_code": 8') in resp.text:
                                self.Ratelimt +=1
        except Exception as E:
            #print(E)
            pass



Claimer_tiktok()


